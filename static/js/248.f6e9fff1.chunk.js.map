{"version":3,"file":"static/js/248.f6e9fff1.chunk.js","mappings":"uQAGaA,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qNAYXE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,0FAOTI,EAAiBJ,EAAAA,EAAAA,MAAH,0FAOdK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4DAKVO,EAAeP,EAAAA,EAAAA,OAAH,8S,SCyCzB,EA3DkB,WAChB,IAAMQ,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MACbE,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJE,MAAM,yBACNC,SAAS,qBACZC,SAAUJ,EAAAA,KAAaG,SAAS,uBAGlCE,QAAQC,IAAIC,EAAAA,GAAAA,OAQZ,OACE,+BAEE,SAAC,KAAD,CACEC,cAzBgB,CACpBN,MAAO,GACPE,SAAU,IAwBNL,iBAAkBA,EAClBU,SAZoB,SAAC,EAAqBC,GAAa,IAAhCR,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,SAClCP,GAASU,EAAAA,EAAAA,IAAU,CAAEL,MAAAA,EAAOE,SAAAA,KAAaO,MAAK,SAAAC,GAC5CP,QAAQC,IAAIM,EACb,IACDF,EAAQG,WACT,EAIG,UAKE,UAAC5B,EAAD,CAAa6B,aAAa,KAA1B,WACE,SAACxB,EAAD,CAAgByB,QAASrB,EAAzB,SAAkC,WAClC,SAACN,EAAD,CAAW4B,KAAK,QAAQC,KAAK,QAAQC,GAAIxB,KACzC,SAACH,EAAD,CAAY0B,KAAK,QAAQE,UAAU,SAEnC,SAAC7B,EAAD,CAAgByB,QAASnB,EAAzB,SAAqC,cACrC,SAACR,EAAD,CACE4B,KAAK,WACLC,KAAK,WACLC,GAAItB,EACJkB,aAAa,WAEf,SAACvB,EAAD,CAAY0B,KAAK,WAAWE,UAAU,SAEtC,SAAC1B,EAAD,CAAcuB,KAAK,SAAnB,SAA4B,iBAKrC,EC/DD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const FormContact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  margin: 0 auto;\n  align-items: center;\n  gap: 10px;\n  width: 300px;\n  border: 1px solid black;\n  border-radius: 15px;\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 0;\n  margin: 0;\n  width: 250px;\n  font-size: 24px;\n`;\n\nexport const FormInputLabel = styled.label`\n  padding: 0;\n  margin: 0;\n  width: 250px;\n  font-size: 16px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  max-width: 250px;\n  color: red;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: transparent;\n  padding: 10px;\n  border-radius: 15px;\n  border: 1px solid green;\n  cursor: pointer;\n  transition: background-color 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: lightgreen;\n    color: #000;\n    font-weight: 600;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport * as yup from 'yup';\n\nimport { loginUser } from 'redux/auth/operationsWithUser';\n\nimport {\n  FormInput,\n  FormInputLabel,\n  SubmitButton,\n  ErrMessage,\n  FormContact,\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const emailID = nanoid();\n  const passwordID = nanoid();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Field is required'),\n    password: yup.string().required('Field is required'),\n  });\n\n  console.log(loginUser.error);\n\n  const handlerFormSubmit = ({ email, password }, actions) => {\n    dispatch(loginUser({ email, password })).then(res => {\n      console.log(res);\n    });\n    actions.resetForm();\n  };\n  return (\n    <>\n      {/* {isLoggedIn && <Navigate to=\"/phonebook\" replace={true} />} */}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handlerFormSubmit}\n      >\n        <FormContact autoComplete=\"on\">\n          <FormInputLabel htmlFor={emailID}>Email</FormInputLabel>\n          <FormInput type=\"email\" name=\"email\" id={emailID} />\n          <ErrMessage name=\"email\" component=\"div\" />\n\n          <FormInputLabel htmlFor={passwordID}>Password</FormInputLabel>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            id={passwordID}\n            autoComplete=\"false\"\n          />\n          <ErrMessage name=\"password\" component=\"div\" />\n\n          <SubmitButton type=\"submit\">Log in</SubmitButton>\n        </FormContact>\n      </Formik>\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default LoginForm;","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;"],"names":["FormContact","styled","Form","FormInput","Field","FormInputLabel","ErrMessage","ErrorMessage","SubmitButton","emailID","nanoid","passwordID","dispatch","useDispatch","validationSchema","yup","shape","email","required","password","console","log","loginUser","initialValues","onSubmit","actions","then","res","resetForm","autoComplete","htmlFor","type","name","id","component"],"sourceRoot":""}